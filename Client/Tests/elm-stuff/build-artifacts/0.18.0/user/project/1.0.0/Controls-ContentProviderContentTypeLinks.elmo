var _user$project$Controls_ContentProviderContentTypeLinks$toggleAllFilter = F2(
	function (model, include) {
		var contentProvider = model;
		var newState = (!include) ? _elm_lang$core$Native_Utils.update(
			contentProvider,
			{showAll: false, links: _user$project$Domain_Core$initLinks}) : _elm_lang$core$Native_Utils.update(
			contentProvider,
			{
				showAll: true,
				links: _user$project$Settings$runtime.links(contentProvider.profile.id)
			});
		return {ctor: '_Tuple2', _0: newState, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$Controls_ContentProviderContentTypeLinks$toggleFilter = F2(
	function (model, _p0) {
		var _p1 = _p0;
		var _p2 = _p1._0;
		var links = model.links;
		var toggleTopic = F2(
			function (contentType, links) {
				return _p1._1 ? A2(
					_elm_lang$core$List$append,
					A3(_user$project$Settings$runtime.topicLinks, _p2, contentType, model.profile.id),
					links) : A2(
					_elm_lang$core$List$filter,
					function (link) {
						return !A2(_elm_lang$core$List$member, _p2, link.topics);
					},
					links);
			});
		var newState = _elm_lang$core$Native_Utils.update(
			model,
			{
				showAll: false,
				links: {
					answers: A2(toggleTopic, _user$project$Domain_Core$Answer, links.answers),
					articles: A2(toggleTopic, _user$project$Domain_Core$Article, links.articles),
					videos: A2(toggleTopic, _user$project$Domain_Core$Video, links.videos),
					podcasts: A2(toggleTopic, _user$project$Domain_Core$Podcast, links.podcasts)
				}
			});
		return {ctor: '_Tuple2', _0: newState, _1: _elm_lang$core$Platform_Cmd$none};
	});
var _user$project$Controls_ContentProviderContentTypeLinks$update = F2(
	function (msg, model) {
		var _p3 = msg;
		if (_p3.ctor === 'Toggle') {
			return A2(
				_user$project$Controls_ContentProviderContentTypeLinks$toggleFilter,
				model,
				{ctor: '_Tuple2', _0: _p3._0._0, _1: _p3._0._1});
		} else {
			return A2(_user$project$Controls_ContentProviderContentTypeLinks$toggleAllFilter, model, _p3._0);
		}
	});
var _user$project$Controls_ContentProviderContentTypeLinks$Toggle = function (a) {
	return {ctor: 'Toggle', _0: a};
};
var _user$project$Controls_ContentProviderContentTypeLinks$toCheckbox = function (topic) {
	return A2(
		_elm_lang$html$Html$div,
		{ctor: '[]'},
		{
			ctor: '::',
			_0: A2(
				_elm_lang$html$Html$input,
				{
					ctor: '::',
					_0: _elm_lang$html$Html_Attributes$type_('checkbox'),
					_1: {
						ctor: '::',
						_0: _elm_lang$html$Html_Attributes$checked(true),
						_1: {
							ctor: '::',
							_0: _elm_lang$html$Html_Events$onCheck(
								function (b) {
									return _user$project$Controls_ContentProviderContentTypeLinks$Toggle(
										{ctor: '_Tuple2', _0: topic, _1: b});
								}),
							_1: {ctor: '[]'}
						}
					}
				},
				{ctor: '[]'}),
			_1: {
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$label,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							_user$project$Domain_Core$getTopic(topic)),
						_1: {ctor: '[]'}
					}),
				_1: {ctor: '[]'}
			}
		});
};
var _user$project$Controls_ContentProviderContentTypeLinks$view = F2(
	function (model, contentType) {
		var _p4 = {ctor: '_Tuple2', _0: model.topics, _1: model.links};
		var topics = _p4._0;
		var links = _p4._1;
		var posts = function () {
			var _p5 = contentType;
			switch (_p5.ctor) {
				case 'Answer':
					return links.answers;
				case 'Article':
					return links.articles;
				case 'Podcast':
					return links.podcasts;
				case 'Video':
					return links.videos;
				case 'Unknown':
					return {ctor: '[]'};
				default:
					return {ctor: '[]'};
			}
		}();
		return A2(
			_elm_lang$html$Html$div,
			{ctor: '[]'},
			{
				ctor: '::',
				_0: A2(
					_elm_lang$html$Html$h2,
					{ctor: '[]'},
					{
						ctor: '::',
						_0: _elm_lang$html$Html$text(
							A2(
								_elm_lang$core$Basics_ops['++'],
								'All ',
								_user$project$Domain_Core$contentTypeToText(contentType))),
						_1: {ctor: '[]'}
					}),
				_1: {
					ctor: '::',
					_0: A2(
						_elm_lang$html$Html$table,
						{ctor: '[]'},
						{
							ctor: '::',
							_0: A2(
								_elm_lang$html$Html$tr,
								{ctor: '[]'},
								{
									ctor: '::',
									_0: A2(
										_elm_lang$html$Html$td,
										{ctor: '[]'},
										{
											ctor: '::',
											_0: A2(
												_elm_lang$html$Html$div,
												{ctor: '[]'},
												A2(_elm_lang$core$List$map, _user$project$Controls_ContentProviderContentTypeLinks$toCheckbox, topics)),
											_1: {ctor: '[]'}
										}),
									_1: {
										ctor: '::',
										_0: A2(
											_elm_lang$html$Html$td,
											{ctor: '[]'},
											{
												ctor: '::',
												_0: A2(
													_elm_lang$html$Html$div,
													{ctor: '[]'},
													A2(
														_elm_lang$core$List$map,
														function (link) {
															return A2(
																_elm_lang$html$Html$a,
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html_Attributes$href(
																		_user$project$Domain_Core$getUrl(link.url)),
																	_1: {ctor: '[]'}
																},
																{
																	ctor: '::',
																	_0: _elm_lang$html$Html$text(
																		_user$project$Domain_Core$getTitle(link.title)),
																	_1: {
																		ctor: '::',
																		_0: A2(
																			_elm_lang$html$Html$br,
																			{ctor: '[]'},
																			{ctor: '[]'}),
																		_1: {ctor: '[]'}
																	}
																});
														},
														posts)),
												_1: {ctor: '[]'}
											}),
										_1: {ctor: '[]'}
									}
								}),
							_1: {ctor: '[]'}
						}),
					_1: {ctor: '[]'}
				}
			});
	});
var _user$project$Controls_ContentProviderContentTypeLinks$ToggleAll = function (a) {
	return {ctor: 'ToggleAll', _0: a};
};
