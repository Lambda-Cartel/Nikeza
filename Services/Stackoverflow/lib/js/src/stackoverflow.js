// Generated by BUCKLESCRIPT VERSION 1.8.1, PLEASE EDIT WITH CARE
'use strict';

var Fs         = require("fs");
var $$Array    = require("bs-platform/lib/js/array.js");
var Axios      = require("axios");
var Pervasives = require("bs-platform/lib/js/pervasives.js");

function tagEndpoint(page) {
  return "https://api.stackexchange.com/2.2/tags?page=" + (Pervasives.string_of_int(page) + "&min=100&pagesize=100&order=desc&sort=popular&site=stackoverflow");
}

function tagsRequest(page) {
  return Axios.get(tagEndpoint(page)).then((function (resp) {
                  return resp.data;
                })).then((function (data) {
                return Promise.resolve(/* record */[
                            /* items */data.items,
                            /* has_more */data.has_more,
                            /* quota_max */data.quota_max,
                            /* quota_remaining */data.quota_remaining
                          ]);
              }));
}

function getAllTags(hasMore, page, acc) {
  if (hasMore) {
    return tagsRequest(page).then((function (resp) {
                  console.log("Page " + (Pervasives.string_of_int(page) + ("\nHasMore " + Pervasives.string_of_bool(hasMore))));
                  return getAllTags(resp[/* has_more */1], page + 1 | 0, $$Array.append(acc, resp[/* items */0]));
                }));
  } else {
    return Promise.resolve(acc);
  }
}

getAllTags(/* true */1, 1, /* array */[]).then((function (data) {
        var match = JSON.stringify(data);
        if (match !== undefined) {
          Fs.writeFileSync("data.json", match, "utf8");
          return Promise.resolve(/* () */0);
        } else {
          return Promise.resolve(/* () */0);
        }
      }));

exports.getAllTags = getAllTags;
/*  Not a pure module */
